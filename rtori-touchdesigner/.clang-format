IndentWidth: 4
TabWidth: 4
UseTab : Always
AlignAfterOpenBracket: Align
AlignArrayOfStructures: Right
AlignConsecutiveAssignments: None
AlignConsecutiveBitFields: AcrossEmptyLinesAndComments
AlignConsecutiveDeclarations: None
AlignConsecutiveMacros: None
AlignEscapedNewlines: Left
AlignOperands: Align
AlignTrailingComments: false
AllowAllArgumentsOnNextLine : false
AllowAllParametersOfDeclarationOnNextLine: false
AllowShortBlocksOnASingleLine: Empty
AllowShortCaseLabelsOnASingleLine: false
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: Empty
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: true
AttributeMacros: ['FLEOS_FLASH_STORAGE', 'restrict']
BinPackArguments: false
BinPackParameters: false
BitFieldColonSpacing: Both
BreakBeforeBinaryOperators: None
BreakBeforeBraces: Custom
BreakAfterAttributes: Always
BraceWrapping:
    AfterEnum: false
    AfterStruct: false
    AfterCaseLabel: false
    AfterClass: false
    AfterControlStatement: Never
    AfterFunction: false
    AfterNamespace: false
    AfterObjCDeclaration: false
    AfterUnion: false
    AfterExternBlock: false
    BeforeCatch: false
    BeforeElse: false
    BeforeLambdaBody: true
    BeforeWhile: false
    SplitEmptyRecord: false
    SplitEmptyFunction: false
    SplitEmptyNamespace: false
BreakBeforeTernaryOperators: true
BreakStringLiterals: true
ColumnLimit: 96
ContinuationIndentWidth: 2
Cpp11BracedListStyle: true
DeriveLineEnding: true
EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: LogicalBlock
IfMacros: ['ATOMIC_BLOCK']
IncludeBlocks: Preserve
# IncludeCategories: Create categories
#IndentAccessModifier: false
IndentCaseBlocks: false
IndentCaseLabels: false
IndentExternBlock: NoIndent
IndentGotoLabels: false
IndentPPDirectives: None
IndentWrappedFunctionNames: true
KeepEmptyLinesAtTheStartOfBlocks: false
LambdaBodyIndentation: Signature
MaxEmptyLinesToKeep: 1
PPIndentWidth: -1
PointerAlignment: Left # Always have the poinnter atached to the type
# Run isolated
#QualifierAlignment: Custom
#QualifierOrder: ['static', 'inline', 'volatile', 'const', 'restrict', 'type']
ReferenceAlignment: Pointer
ReflowComments: true
SortIncludes: Never
SortUsingDeclarations: false
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceAroundPointerQualifiers: Default
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeParens: ControlStatements
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesInAngles: Never
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
SpacesInParentheses: false
SpacesInSquareBrackets: false
Standard: c++20
StatementMacros: ['REGISTER', 'REGISTER_CATEGORY']
PenaltyReturnTypeOnItsOwnLine: 666
