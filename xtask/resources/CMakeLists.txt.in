cmake_minimum_required(VERSION 3.21...3.31)

# It should be placed in the root directory
set(prefix ${CMAKE_CURRENT_LIST_DIR})

set(RTORI_CORE_TARGET_TRIPLET "{{target_triple}}" CACHE INTERNAL "Target triple of the compiled rtori_core" FORCE)

set(RTORI_CORE_TARGET_ARCH "{{target_arch}}" CACHE INTERNAL "Target architecture of the compiled rtori_core" FORCE)
set(RTORI_CORE_TARGET_OS "{{target_os}}" CACHE INTERNAL "Target operating system (OS) of the compiled rtori_core" FORCE)
set(RTORI_CORE_TARGET_ENV {% if let Some(env) = target_env %} "{{env}}" {% else %} "none" {% endif %} CACHE INTERNAL "Target environment of the compiled rtori_core" FORCE)

include(CheckABI.cmake)
rtori_guess_cmake_toolchain_abi(
    ARCH ${RTORI_CORE_TARGET_ARCH}
    OS ${RTORI_CORE_TARGET_OS}
    ENV ${RTORI_CORE_TARGET_ENV}
)

add_library(rtori_core::CHeaders INTERFACE IMPORTED GLOBAL)
set_target_properties(rtori_core::CHeaders PROPERTIES
    LANGUAGE C
    INTERFACE_INCLUDE_DIRECTORIES "${prefix}/headers/c"
)

add_library(rtori_core::CXXHeaders INTERFACE IMPORTED GLOBAL)
set_target_properties(rtori_core::CXXHeaders PROPERTIES
    LANGUAGE CXX
    INTERFACE_INCLUDE_DIRECTORIES "${prefix}/headers/cpp"
)

{% if let Some(shared) = shared_path_rel %}

add_library(rtori_core::Shared SHARED IMPORTED GLOBAL)
set_target_properties(rtori_core::Shared PROPERTIES
    LINKER_LANGUAGE C
    IMPORTED_LOCATION "${prefix}/{{shared.to_string_lossy()}}"
)

if(WIN32)
    set_target_properties(rtori_core::Shared PROPERTIES
        IMPORTED_IMPLIB "${prefix}/{{shared.to_string_lossy()}}.lib"
    )
endif()

{% endif %}

    {% if let Some(static_path_rel) = static_path_rel %}

add_library(rtori_core::Static STATIC IMPORTED GLOBAL)
set_target_properties(rtori_core::Shared PROPERTIES
    LINKER_LANGUAGE C
    IMPORTED_LOCATION "${prefix}/{{static_path_rel.to_string_lossy()}}"
    INTERFACE_COMPILE_DEFINITIONS "-DRTORI_STATIC"
)

{% endif %}
